(()=>{"use strict";var e={d:(t,n)=>{for(var o in n)e.o(n,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:n[o]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};e.d({},{x:()=>m});const t=[{id:"1",name:"Lily's birthday",created:new Date("07/25/2023"),category:"Task",content:"To prepare a present for Lily until 8/8/2023"},{id:"2",name:"Hair color",created:new Date("07/27/2023"),category:"Random Thought",content:"It would be interesting to look at myself with a red hair"},{id:"3",name:"A gift for Lily",created:new Date("07/28/2023"),category:"Idea",content:"It's may be an umbrella or Harry Potter's theme gift-box"},{id:"4",name:"Shopping List",created:new Date("07/29/2023"),category:"Task",content:"1) Milk; 2) Bread; 3) Lemon; 4) Tomatoes"},{id:"5",name:"TypeScript",created:new Date("07/31/2023"),category:"Idea",content:"It will be good to learn TypeScript"},{id:"6",name:"Questions for an interview",created:new Date("08/01/2023"),category:"Task",content:"Prepare to the interview"},{id:"7",name:"Game Of Thrones",created:new Date("08/02/2023"),category:"Random Thought",content:"Are there some news about George R.R. Martin 6th book?"}],n={0:"January",1:"February",2:"March",3:"April",4:"May",5:"June",6:"July",7:"August",8:"September",9:"October",10:"November",11:"December"},o=/[0-9]{1,2}\/[0-9]{1,2}\/[0-9]{2,4}/g,r=/[0-9]{1,2}[\\,.-][0-9]{1,2}[\\,.-][0-9]{2,4}/g,c={Task:'<svg width="20" height="20" class="category-icon icon">\n          <use href="./src/assets/symbol-defs.svg#task"></use>\n        </svg>',Idea:'<svg width="20" height="20" class="category-icon icon">\n          <use href="./src/assets/symbol-defs.svg#idea"></use>\n        </svg>',RandomThought:'<svg width="20" height="20" class="category-icon icon">\n          <use href="./src/assets/symbol-defs.svg#random-thought"></use>\n        </svg>'},s=function(e,t){return e.match(t)},a=function(e){return c[e.replace(" ","")]},i=function(e){const t=Object.keys(e).includes("category")?e.category:e.children[2].outerText,n=m.statsTable.children;let o;for(let e=0;e<n.length;++e)n[e].children[0].children[1].outerText===t&&(o=n[e]);return o},d=function(e,t){const n="archiveTable"===e?m.archivedNotesList.children:m.notesTable.children;let o;for(let e=0;e<n.length;++e)n[e].id===t&&(o=n[e]);return o},l=function(e,t){e.children[t].textContent=Number(e.children[t].outerText)+1},u=function(e,t){e.children[t].textContent=Number(e.children[t].outerText)-1};let h=[],g=[],b=[];const v=function(e){const t=e?m.notesTable.children:m.archivedNotesList.children,n=e?1:2;for(;0!==t.length;)t[0].remove();const o=m.statsTable.children;for(let e=0;e<o.length;++e)o[e].children[n].textContent=0},f=function(e,t){const r=t?"btns-cell":"btn-cell";return`<tr id="${e.id}" class="row">\n        <td class="table-content with-icon">${a(e.category)}\n            <span>${e.name}</span>\n        </td>\n        <td class="table-content">${"string"==typeof e.created?e.created:(c=e.created,`${n[c.getMonth()]} ${c.getDate()}, ${c.getFullYear()}`)}</td>\n        <td class="table-content">${e.category}</td>\n        <td class="table-content">${e.content}</td>\n        <td class="table-content">${s(e.content,o)??""}</td>\n        <td class="${r}">\n          ${function(e){return e?'<button type="button" class="edit btn"><svg width="20" height="20" class="icon">\n          <use href="./src/assets/symbol-defs.svg#edit"></use>\n        </svg></button>\n          <button type="button" class="archive btn"><svg width="20" height="20" class="icon">\n              <use href="./src/assets/symbol-defs.svg#archive"></use>\n            </svg></button>\n          <button type="button" class="delete btn"><svg width="20" height="20" class="icon">\n            <use href="./src/assets/symbol-defs.svg#delete"></use>\n          </svg></button>':'<button type="button" class="unarchive btn">\n      <svg width="20" height="20" class="icon">\n              <use href="./src/assets/symbol-defs.svg#unarchive"></use>\n            </svg>\n    </button>'}(t)}\n        </td>\n      </tr>`;var c},m={notesTable:document.querySelector("#notes"),createBtn:document.querySelector("#create-note"),statsTable:document.querySelector("#statistic"),archiveAllBtn:document.querySelector(".archive-all"),deleteAllBtn:document.querySelector(".delete-all"),form:document.querySelector("#form"),category:document.querySelector(".category"),nameInput:document.querySelector(".name"),contentInput:document.querySelector(".content"),submitBtn:document.querySelector("#submit-btn"),showArchiveBtn:document.querySelector("#show-archive"),archiveTable:document.querySelector("#archive"),archivedNotesList:document.querySelector("#archived-notes"),unarchiveAllBtn:document.querySelector(".unarchive-all")};m.notesTable.insertAdjacentHTML("beforeend",t.reduce(((e,t)=>(e.push(f(t,!0)),e)),[]).join("")),m.statsTable.insertAdjacentHTML("beforeend",Object.keys(c).reduce(((e,n)=>{const o=function(e){const n=t.filter((t=>t.category.replace(" ","")===e)),o={};return n.length>0&&(o.name="RandomThought"===e?"Random Thought":e,o.acrchivedNotes=n.reduce(((e,t)=>t.archived?++e:e),0),o.activeNotes=n.length-o.acrchivedNotes),o}(n);return Object.keys(o).length>0?(e.push(o),e):e}),[]).map((e=>`\n    <tr class="row">\n      <td class="table-content with-icon">${a(e.name)}\n          <span>${e.name}</span>\n      </td>\n      <td class="stats-data">${e.activeNotes}</td>\n      <td class="stats-data">${e.acrchivedNotes}</td>\n    </tr>`)).join("")),m.deleteAllBtn.addEventListener("click",v),m.archiveAllBtn.addEventListener("click",(function(){const e=m.notesTable.children;for(let n=0;n<e.length;++n){const o=d("notesTable",e[n].id),r=b.find((e=>e.id===o.id))||t.find((e=>e.id===o.id))||g.find((e=>e.id===o.id));h=[...h,r];const c=i(e[n]);l(c,2),m.archivedNotesList.insertAdjacentHTML("beforeend",f(r,!1))}v(!0)})),m.notesTable.addEventListener("click",(function(e){const n=e.target.classList.value;if("edit btn"===n)!function(e){const t=e.target.parentNode.parentNode;m.nameInput.value=t.children[0].children[1].outerText,m.category.value=t.children[2].outerText,m.contentInput.value=t.children[3].outerText,m.form.setAttribute("note-id",t.id),m.form.classList.toggle("visually-hidden")}(e);else if("archive btn"===n)!function(e){const n=e.target.parentNode.parentNode,o=i(n),r=b.find((e=>e.id===n.id))||t.find((e=>e.id===n.id))||g.find((e=>e.id===n.id));h=[...h,r],l(o,2),u(o,1),m.archivedNotesList.insertAdjacentHTML("beforeend",f(r,!1)),e.target.parentNode.parentNode.remove()}(e);else{if("delete btn"!==n)return;!function(e){const t=e.target.parentNode.parentNode,n=i(t);u(n,1),t.remove()}(e)}})),m.createBtn.addEventListener("click",(function(){m.nameInput.value="",m.contentInput.value="",m.form.classList.toggle("visually-hidden")})),m.submitBtn.addEventListener("click",(function(e){e.preventDefault();const t=m.form.getAttribute("note-id")??`${Math.floor(110*Math.random())}`,n=function(e){const t=m.contentInput.value,n=d("notesTable",e)?d("notesTable",e).children[1].outerText:new Date;try{if(s(t,r))throw new Error("The date must be in format dd/mm/yyyy");return{id:e,name:m.nameInput.value,created:n,category:m.category.value,content:t}}catch(e){return m.contentInput.classList.toggle("invalid"),m.contentInput.insertAdjacentHTML("afterend",`<span>${e.message}</span>`),e.message}}(t),o=i(n);if("string"!=typeof n){if(m.form.hasAttribute("note-id")){const e=d("notesTable",t);if(e.children[2].outerText!==m.category.value){const t=i(e);u(t,1)}e.remove()}else g=[...g,n];l(o,1),m.nameInput.value="",m.contentInput.value="",m.notesTable.insertAdjacentHTML("beforeend",f(n,!0)),m.form.classList.toggle("visually-hidden")}})),m.showArchiveBtn.addEventListener("click",(function(){m.archiveTable.classList.toggle("visually-hidden")})),m.unarchiveAllBtn.addEventListener("click",(function(){const e=m.archivedNotesList.children;for(let n=0;n<e.length;++n){const o=d("archiveTable",e[n].id),r=b.find((e=>e.id===o.id))||t.find((e=>e.id===o.id))||g.find((e=>e.id===o.id));m.notesTable.insertAdjacentHTML("beforeend",f(r,!0));const c=i(e[n]);l(c,1)}h=[],v(!1)})),m.archivedNotesList.addEventListener("click",(function(e){const t=e.target.parentNode.parentNode,n=i(t);u(n,2);const o=h.find((e=>e.id===t.id)),r=h.indexOf(o);h.splice(r,1),t.remove(),m.notesTable.insertAdjacentHTML("beforeend",f(o,!0)),l(n,1)}))})();